
Perfect! Let's extend your ASP.NET Web Forms Meeting Attendance Logging app to save the form data to SQL Server using a Stored Procedure. Here's a step-by-step guide:


---

‚úÖ WHAT YOU NEED

SQL Server (Express or full version)

Connection string to your SQL Server database

A Meetings table

A stored procedure to insert data

Update your btnSave_Click to use ADO.NET



---

üîß STEP 1: Create SQL Table

Open SQL Server Management Studio (SSMS) and run:

CREATE TABLE Meetings (
    MeetingID INT IDENTITY(1,1) PRIMARY KEY,
    Title NVARCHAR(200),
    StartTime DATETIME,
    EndTime DATETIME,
    Venue NVARCHAR(200),
    Organizer NVARCHAR(100)
);


---

‚öôÔ∏è STEP 2: Create Stored Procedure

Run this SQL to add a stored procedure:

CREATE PROCEDURE InsertMeeting
    @Title NVARCHAR(200),
    @StartTime DATETIME,
    @EndTime DATETIME,
    @Venue NVARCHAR(200),
    @Organizer NVARCHAR(100)
AS
BEGIN
    INSERT INTO Meetings (Title, StartTime, EndTime, Venue, Organizer)
    VALUES (@Title, @StartTime, @EndTime, @Venue, @Organizer);
END


---

üìÇ STEP 3: Add Connection String in Web.config

In your project, open Web.config and inside <configuration>, add:

<connectionStrings>
  <add name="MeetingDb" 
       connectionString="Data Source=YOUR_SERVER_NAME;Initial Catalog=YOUR_DATABASE_NAME;Integrated Security=True;" 
       providerName="System.Data.SqlClient" />
</connectionStrings>

> üîÅ Replace YOUR_SERVER_NAME and YOUR_DATABASE_NAME accordingly
Example: Data Source=.\SQLEXPRESS;Initial Catalog=MeetingDB;Integrated Security=True;




---

üß† STEP 4: Update Code-Behind (MeetingForm.aspx.cs)

Add these namespaces at the top:

using System.Data;
using System.Data.SqlClient;
using System.Configuration;

Update btnSave_Click method:

protected void btnSave_Click(object sender, EventArgs e)
{
    string title = txtTitle.Text;
    DateTime startTime = Convert.ToDateTime(txtStart.Text);
    DateTime endTime = Convert.ToDateTime(txtEnd.Text);
    string venue = txtVenue.Text;
    string organizer = txtOrganizer.Text;

    string connStr = ConfigurationManager.ConnectionStrings["MeetingDb"].ConnectionString;

    using (SqlConnection conn = new SqlConnection(connStr))
    {
        using (SqlCommand cmd = new SqlCommand("InsertMeeting", conn))
        {
            cmd.CommandType = CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("@Title", title);
            cmd.Parameters.AddWithValue("@StartTime", startTime);
            cmd.Parameters.AddWithValue("@EndTime", endTime);
            cmd.Parameters.AddWithValue("@Venue", venue);
            cmd.Parameters.AddWithValue("@Organizer", organizer);

            conn.Open();
            cmd.ExecuteNonQuery();
            conn.Close();

            lblStatus.Text = "Meeting saved to database successfully!";
        }
    }
}


---

‚úÖ STEP 5: Run and Test

1. Run the app (Ctrl + F5)


2. Fill out the form and click Save


3. Open SQL Server and check Meetings table ‚Äî your data should be saved!




---

üß™ Next Ideas (optional):

Show saved meetings using DataTables

Add edit/delete functions

Add a meeting attendance log table


Want help with any of these next steps?

----------

Great! If you're using SQL Server Authentication, you'll need to update your connection string in Web.config to include your SQL username and password instead of Integrated Security=True.


---

‚úÖ STEP 1: Update Connection String

Open your Web.config and replace the existing connection string with this format:

<connectionStrings>
  <add name="MeetingDb" 
       connectionString="Data Source=YOUR_SERVER_NAME;Initial Catalog=YOUR_DATABASE_NAME;User ID=YOUR_USERNAME;Password=YOUR_PASSWORD;" 
       providerName="System.Data.SqlClient" />
</connectionStrings>

üîÅ Replace:

Placeholder	Description

YOUR_SERVER_NAME	e.g. localhost, .\SQLEXPRESS, or server IP
YOUR_DATABASE_NAME	The name of your database (e.g. MeetingDB)
YOUR_USERNAME	Your SQL login username (e.g. sa)
YOUR_PASSWORD	The corresponding SQL password



---

‚úÖ Example (SQL Auth):

<connectionStrings>
  <add name="MeetingDb" 
       connectionString="Data Source=localhost;Initial Catalog=MeetingDB;User ID=sa;Password=MySecurePass123;" 
       providerName="System.Data.SqlClient" />
</connectionStrings>

> üîí Never share passwords in source code or public repositories. For production, store sensitive data securely (e.g., in environment variables or encrypted config files).




---

‚úÖ STEP 2: Run and Test

After updating the connection string:

1. Save changes


2. Run the project


3. Fill out and submit the meeting form


4. Check SQL Server ‚Äî the data should appear in the Meetings table




---

Would you like help adding a grid view or table to show all saved meetings using DataTables + Bootstrap?

