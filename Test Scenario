Sure! Here's a complete simplified version of your ASP.NET Web Forms application that:

‚úÖ Removes login/LDAP authentication (for now)
‚úÖ Keeps the Meeting Form with Bootstrap UI
‚úÖ Generates a custom Meeting ID (MTG-yyyyMMdd-###)
‚úÖ Saves data to SQL Server via Stored Procedure using SQL Server Authentication


---

‚úÖ OVERVIEW

What‚Äôs included:

MeetingForm.aspx (Bootstrap-based form)

MeetingForm.aspx.cs (Code-behind with ID generation + DB save)

Web.config (SQL connection string)

SQL table and stored procedure



---

üìÑ 1. MeetingForm.aspx (UI Form)

<%@ Page Language="C#" AutoEventWireup="true" CodeFile="MeetingForm.aspx.cs" Inherits="MeetingForm" %>

<!DOCTYPE html>
<html>
<head runat="server">
    <title>Meeting Attendance Logging</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
</head>
<body>
    <form id="form1" runat="server">
        <div class="container mt-5">
            <div class="card shadow rounded p-4">
                <h3 class="mb-4">Meeting Attendance Logging</h3>

                <div class="mb-3">
                    <label class="form-label">Title / Agenda</label>
                    <asp:TextBox ID="txtTitle" runat="server" CssClass="form-control" />
                </div>

                <div class="mb-3">
                    <label class="form-label">Start Date & Time</label>
                    <asp:TextBox ID="txtStart" runat="server" TextMode="DateTimeLocal" CssClass="form-control" />
                </div>

                <div class="mb-3">
                    <label class="form-label">End Date & Time</label>
                    <asp:TextBox ID="txtEnd" runat="server" TextMode="DateTimeLocal" CssClass="form-control" />
                </div>

                <div class="mb-3">
                    <label class="form-label">Venue / Location</label>
                    <asp:TextBox ID="txtVenue" runat="server" CssClass="form-control" />
                </div>

                <div class="mb-3">
                    <label class="form-label">Organizer</label>
                    <asp:TextBox ID="txtOrganizer" runat="server" CssClass="form-control" />
                </div>

                <asp:Button ID="btnSave" runat="server" Text="Save" CssClass="btn btn-primary" OnClick="btnSave_Click" />
                <asp:Label ID="lblStatus" runat="server" CssClass="form-text mt-3 text-success" />
            </div>
        </div>
    </form>
</body>
</html>


---

üí° 2. MeetingForm.aspx.cs (Code-behind)

using System;
using System.Configuration;
using System.Data;
using System.Data.SqlClient;

public partial class MeetingForm : System.Web.UI.Page
{
    protected void Page_Load(object sender, EventArgs e) { }

    protected void btnSave_Click(object sender, EventArgs e)
    {
        string title = txtTitle.Text;
        DateTime start = Convert.ToDateTime(txtStart.Text);
        DateTime end = Convert.ToDateTime(txtEnd.Text);
        string venue = txtVenue.Text;
        string organizer = txtOrganizer.Text;

        // Generate MeetingCode: MTG-yyyyMMdd-###
        string datePart = DateTime.Now.ToString("yyyyMMdd");
        string meetingCodePrefix = "MTG-" + datePart + "-";
        int nextSeq = GetNextMeetingSequence(datePart);
        string meetingCode = meetingCodePrefix + nextSeq.ToString("D3");

        string connStr = ConfigurationManager.ConnectionStrings["MeetingDb"].ConnectionString;

        using (SqlConnection conn = new SqlConnection(connStr))
        {
            using (SqlCommand cmd = new SqlCommand("InsertMeeting", conn))
            {
                cmd.CommandType = CommandType.StoredProcedure;
                cmd.Parameters.AddWithValue("@MeetingCode", meetingCode);
                cmd.Parameters.AddWithValue("@Title", title);
                cmd.Parameters.AddWithValue("@StartTime", start);
                cmd.Parameters.AddWithValue("@EndTime", end);
                cmd.Parameters.AddWithValue("@Venue", venue);
                cmd.Parameters.AddWithValue("@Organizer", organizer);

                conn.Open();
                cmd.ExecuteNonQuery();
                conn.Close();

                lblStatus.Text = "Meeting saved with ID: " + meetingCode;
            }
        }
    }

    private int GetNextMeetingSequence(string datePart)
    {
        int count = 0;
        string connStr = ConfigurationManager.ConnectionStrings["MeetingDb"].ConnectionString;

        using (SqlConnection conn = new SqlConnection(connStr))
        {
            string query = "SELECT COUNT(*) FROM Meetings WHERE MeetingCode LIKE @codePattern";
            using (SqlCommand cmd = new SqlCommand(query, conn))
            {
                cmd.Parameters.AddWithValue("@codePattern", "MTG-" + datePart + "-%");

                conn.Open();
                count = (int)cmd.ExecuteScalar();
                conn.Close();
            }
        }

        return count + 1;
    }
}


---

‚öôÔ∏è 3. Web.config ‚Äì SQL Server Authentication

<configuration>
  <connectionStrings>
    <add name="MeetingDb"
         connectionString="Data Source=localhost;Initial Catalog=MeetingDB;User ID=sa;Password=YourPassword123;"
         providerName="System.Data.SqlClient" />
  </connectionStrings>
</configuration>

> üîÅ Replace:

localhost ‚Üí your SQL Server name

MeetingDB ‚Üí your database name

User ID and Password ‚Üí your SQL login credentials





---

üóÉÔ∏è 4. SQL Server Setup

üìå Create Table:

CREATE TABLE Meetings (
    MeetingID INT IDENTITY(1,1) PRIMARY KEY,
    MeetingCode NVARCHAR(50),
    Title NVARCHAR(200),
    StartTime DATETIME,
    EndTime DATETIME,
    Venue NVARCHAR(200),
    Organizer NVARCHAR(100)
);

üìå Create Stored Procedure:

CREATE PROCEDURE InsertMeeting
    @MeetingCode NVARCHAR(50),
    @Title NVARCHAR(200),
    @StartTime DATETIME,
    @EndTime DATETIME,
    @Venue NVARCHAR(200),
    @Organizer NVARCHAR(100)
AS
BEGIN
    INSERT INTO Meetings (MeetingCode, Title, StartTime, EndTime, Venue, Organizer)
    VALUES (@MeetingCode, @Title, @StartTime, @EndTime, @Venue, @Organizer);
END


---

‚úÖ DONE!

You now have a:

üé® Bootstrap-styled form

üÜî Auto-generated Meeting ID (MTG-yyyyMMdd-###)

üíæ SQL Server backend with stored procedure

üîê SQL Server authentication setup



---

Would you like to add next:

üìã Table view of saved meetings?

üîç Search/filter (using DataTables)?

üßç Attendance entry?


Let me know and I‚Äôll help you build it!

