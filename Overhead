Perfect ‚Äî you're automating a loop from Excel to SAP that works like this:

üîÅ Full Flow:

1. Loop through each row in Column E of Excel.


2. Open SAP, paste the value into the Cost Center input field.


3. Execute.


4. Wait for table control to appear.


5. In the table:

Check Column 1 (ZR11‚ÄìZR15).

Update Column 2 and Column 8 accordingly.



6. Click Save.


7. Repeat for the next value in Column E.




---

‚úÖ Full VBA Macro Code

This version includes:

Cost Center input

Table condition checking

Save action

Loop to the next item


Sub ProcessCostCentersInSAP()
    Dim SapGuiAuto As Object
    Dim SAPApp As Object
    Dim SAPCon As Object
    Dim session As Object
    Dim ws As Worksheet
    Dim lastRow As Long
    Dim i As Long, rowIndex As Long
    Dim costCenter As String
    Dim rowCount As Integer
    Dim tablePath As String

    ' Set Excel worksheet
    Set ws = ThisWorkbook.Sheets(1)
    lastRow = ws.Cells(ws.Rows.Count, "E").End(xlUp).Row

    ' Connect to SAP
    On Error Resume Next
    Set SapGuiAuto = GetObject("SAPGUI")
    If Err.Number <> 0 Then MsgBox "SAP GUI not running": Exit Sub
    Set SAPApp = SapGuiAuto.GetScriptingEngine
    Set SAPCon = SAPApp.Children(0)
    Set session = SAPCon.Children(0)
    On Error GoTo 0

    ' Loop through each cost center in column E
    For i = 2 To lastRow
        costCenter = Trim(ws.Cells(i, "E").Value)
        If costCenter <> "" Then
            ' Step 1: Enter Cost Center
            session.findById("wnd[0]/usr/ctxtYourCostCenterField").Text = costCenter
            session.findById("wnd[0]").sendVKey 0 ' or session.findById("wnd[0]/tbar[1]/btn[8]").press
            
            Application.Wait Now + TimeValue("0:00:02") ' Wait for table window

            ' Step 2: Table Handling
            tablePath = "wnd[1]/usr/tblSAPLXXXX" ' Replace with actual table ID
            rowCount = 10 ' Set to actual number of table rows

            For rowIndex = 0 To rowCount - 1
                Dim col1Path As String, col2Path As String, col8Path As String
                Dim col1Val As String

                col1Path = tablePath & "/txtZCOLUMN1_FIELD[0," & rowIndex & "]"
                col2Path = tablePath & "/txtZCOLUMN2_FIELD[1," & rowIndex & "]"
                col8Path = tablePath & "/txtZCOLUMN8_FIELD[7," & rowIndex & "]"

                col1Val = UCase(Trim(session.findById(col1Path).Text))

                Select Case col1Val
                    Case "ZR11"
                        session.findById(col2Path).Text = ""
                        session.findById(col8Path).Text = "1"
                    Case "ZR12", "ZR13", "ZR14", "ZR15"
                        session.findById(col2Path).Text = "0.25"
                        session.findById(col8Path).Text = "0"
                End Select
            Next rowIndex

            ' Step 3: Click Save
            session.findById("wnd[1]/tbar[0]/btn[11]").press ' Or appropriate Save button ID

            Application.Wait Now + TimeValue("0:00:01") ' Short pause before next cost center
        End If
    Next i

    MsgBox "All cost centers processed successfully!"
End Sub


---

üß© Replace These Placeholders

Placeholder	Description

ctxtYourCostCenterField	Cost center input field (e.g. ctxtKOSTL-LOW)
tblSAPLXXXX	Table control ID (e.g. tblSAPLKPP0TC_1000)
txtZCOLUMN1_FIELD	Column 1 (key field, e.g. txtKOSTL[0,0])
txtZCOLUMN2_FIELD	Column 2
txtZCOLUMN8_FIELD	Column 8
btn[11]	Save button ID (might be btn[11], or use the scripting recorder to confirm)



---

üîç How to Get Exact Field IDs:

1. Go to SAP > Alt + F12 ‚Üí "Script Recording and Playback".


2. Record yourself inputting the cost center and modifying the table.


3. Stop the recording, open the .vbs file, and copy exact .findById() paths.




---

Let me know if you want:

Error handling for blank or invalid entries.

Scrolling logic for tables with >10 rows.

Export SAP error messages back to Excel.


